name: Dart

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

env:
  ROOT_DIR: App/memo # Adjusted to match your directory structure
  TEST_BRANCH: DevTest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@v1
        with:
          sdk: "3.5.4"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.4" # Use the desired Flutter version

      - name: Install dependencies
        run: dart pub get
        working-directory: ${{ env.ROOT_DIR }}

      # - name: Analyze project source
      #   run: dart analyze
      #   working-directory: ${{ env.ROOT_DIR }}

      # - name: Run tests
      #   run: dart test
      #   working-directory: ${{ env.ROOT_DIR }}

  merge-to-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Merge changes into test branch
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git fetch origin
          git checkout DevTest
          git merge ${{ github.ref }} --no-ff -m "Auto-merge from ${{ github.ref }}"
        working-directory: ${{ env.ROOT_DIR }}
        continue-on-error: true

  auto-merge:
    runs-on: ubuntu-latest
    needs: merge-to-test
    steps:
      - uses: actions/checkout@v4

      - name: Merge changes into other branches
        uses: actions/github-script@v6
        with:
          script: |
            const branches = ["Sandinu", "Thisas", "malsha", "monali", "sachin", "sadinsa"];
            for (const branch of branches) {
              await github.repos.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                base: branch,
                head: "DevTest",
                commit_message: "Auto-merge from DevTest"
              });
            }
